package com.husostein.main;

public class Move {
	
	private Board board;
	
	int field[][] = new int[8][2];
	int direction=0;
	
	public Move(Board board) {
		
		this.board=board;
		field=board.getField();
	}
	
	public void makeMove() {
		
		boolean moving=true;
		
		int moves=0;
		
		if (checkMove()==true) {
			
			board.setNextX(board.getSelX());
			board.setNextY(board.getSelY());
			
			moves=field[board.getX()][board.getY()];
			
			field[board.getX()][board.getY()]=0;
			
			while(moving==true) {
				
				if(board.getX()<board.getNextX()) direction=1;
				if(board.getX()>board.getNextX()) direction=-1;
				if(board.getX()==board.getNextX() && board.getY()<board.getNextY()) direction=-1;
				if(board.getX()==board.getNextX() && board.getY()>board.getNextY()) direction=1;
				
				for(int i=0; i<moves; i++) {
					
					System.out.print(board.getNextX());
					System.out.println(board.getNextY());
					
					if(board.getNextX() == -1 && board.getNextY() == 0) {
						board.setNextX(0);
						board.setNextY(1);
						direction=1;
					}
					
					if(board.getNextX() == -1 && board.getNextY() == 1) {
						board.setNextX(1);
						board.setNextY(1);
						direction=1;
					}
					
					if(board.getNextX() == 8 && board.getNextY() == 0) {
						board.setNextX(6);
						board.setNextY(0);
						direction=-1;
					}
					
					if(board.getNextX() == 8 && board.getNextY() == 1) {
						board.setNextX(7);
						board.setNextY(0);
						direction=-1;
					}
					
					System.out.print(board.getNextX());
					System.out.println(board.getNextY());
					
					field[board.getNextX()][board.getNextY()]++;
					board.setNextX(board.getNextX()+(1*direction));
				}
				
				moving=false;
				
			}
		}
		
		else {
			System.out.println("Impossible Move");
		}
		
		return;
	}
	
	public boolean checkMove() {
		
		boolean possible=false;
		
		if(field[board.getX()][board.getY()] >= 2) {
			
			if(board.getSelX()==board.getX()+1 || board.getSelX()==board.getX()-1) {
			
				possible=true;
			}
			
			if((board.getX() == board.getSelX()) && (board.getY()==0 && board.getSelY() > board.getY()) || (board.getY()==1 && board.getSelY() < board.getY())) {
				
				possible=true;
			}
		}
		
		System.out.println(possible);
		return possible;
	}
	
	
}
